version: '3.3'
services:
  frontend:
    build:
      context: ./frontend/.
      dockerfile: prod.dockerfile
    image: ${DOCKER_PREFIX}/${DOCKER_APPLICATION_TITLE}-frontend:${FRONTEND_VERSION}
    restart: unless-stopped
    environment:
      - BASE_API_URL=${BASE_API_URL}
      - SLIDE_IMAGE_URL=${SLIDE_IMAGE_URL}
      - SLIDE_API_URL=${SLIDE_API_URL}
      - APP_TITLE=${APP_TITLE}
      - APP_FAVICON_URL=${APP_FAVICON_URL}
      - FRONTEND_VERSION=${FRONTEND_VERSION}
    ports:
      - '3000:80'
    depends_on:
      - slide_api
      - lern_api

  lern_api:
    build:
      context: ./backend/.
      dockerfile: prod.dockerfile
      args:
        - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
        - MYSQL_HOST=${DATABASE_IP}
        - MYSQL_DATABASE=${DATABASE_DB}
    image: ${DOCKER_PREFIX}/${DOCKER_APPLICATION_TITLE}-lern_api:${LERN_API_VERSION}
    environment:
      - DATABASE_URL=${DATABASE_DRIVER}://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_IP}/${DATABASE_DB}?${DATABASE_QUERY_PARAMETERS}
      - RABBIT_URL=amqp://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_IP}:${RABBIT_PORT}//
      - SLIDE_URL=${SLIDE_API_URL}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - SENTRY_METRICS=${SENTRY_METRICS}
      - SENTRY_PATH=${SENTRY_PATH}
      - SENTRY_ENVIRONMENT_TAG=${SENTRY_ENVIRONMENT_TAG}
    ports:
      - '8000:8000'
    volumes:
      - ./backend/app:/app
    depends_on:
      - lern_db

  lern_db:
    image: mysql:8.0
    platform: linux/x86_64
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DATABASE_DB}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - '3306:${DATABASE_PORT}'
    volumes:
      - my-db:/var/lib/mysql

  slide_api:
    build:
      context: ./pyramid-creator/.
      dockerfile: prod.dockerfile
    image: ${DOCKER_PREFIX}/${DOCKER_APPLICATION_TITLE}-slide_api:${SLIDE_API_VERSION}
    command: uvicorn app.app:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=amqp://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_IP}:${RABBIT_PORT}//
      - DATABASE_URL=${MONGO_DRIVER}://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_IP}:${MONGO_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - '8001:8000'
    volumes:
      - ./pyramid-creator/data:/data
    depends_on:
      - slide_db

  slide_worker:
    image: ${DOCKER_PREFIX}/${DOCKER_APPLICATION_TITLE}-slide_api:${SLIDE_API_VERSION}
    restart: unless-stopped
    command: celery --app worker.celery_app worker --loglevel=info
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - CELERY_BROKER_URL=amqp://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_IP}:${RABBIT_PORT}//
      - DATABASE_URL=${MONGO_DRIVER}://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_IP}:${MONGO_PORT}
    volumes:
      - ./pyramid-creator/data:/data
    depends_on:
      - slide_api

  slide_db:
    image: mongo:latest
    restart: unless-stopped
    command: --quiet
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - '27017:${MONGO_PORT}'
    volumes:
      - mongodb_data:/mongodb

  minio:
    image: minio/minio
    restart: unless-stopped
    command: server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio_data:/data

  rabbit:
    image: rabbitmq:latest
    restart: unless-stopped
    ports:
      - '5672:5672'

volumes:
  my-db:
  mongodb_data:
